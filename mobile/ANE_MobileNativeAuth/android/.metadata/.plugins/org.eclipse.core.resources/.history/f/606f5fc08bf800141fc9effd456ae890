package ru.realgames.squirrels.auth;

import ru.ok.android.sdk.Odnoklassniki;
import ru.ok.android.sdk.util.OkScope;
import ru.ok.android.sdk.OkTokenRequestListener;
import android.content.Context;

import com.adobe.fre.FREContext;

public class AuthOK implements AuthInterface {

	private final static String MSG_ERROR_AUTH_CANCELED = "Authorization was canceled";
	private final static String MSG_ERROR_GETTING_TOKEN = "Error getting token";
	
	private Odnoklassniki mOdnoklassniki = null;
	private AuthListener _callBack = null;
	private FREContext _context = null;
	private Context _baseContext = null;
	
	public AuthOK(FREContext context, String appId, AuthListener callBack) {
		_context = context;
		_callBack = callBack;
		_baseContext = _context.getActivity().getBaseContext();
		
		mOdnoklassniki = Odnoklassniki.createInstance(_baseContext, "APP_ID", "APP_SECRET", "APP_KEY");
		mOdnoklassniki.setTokenRequestListener(_listener);
		if (mOdnoklassniki.hasAccessToken()) {
			onSuccess(mOdnoklassniki.getCurrentAccessToken());
			return;
		}
	}
	
	private final OkTokenRequestListener _listener = new OkTokenRequestListener() {
		@Override
		public void onSuccess(final String accessToken) {
			onSuccess(accessToken);
		}

		@Override
		public void onCancel() {
			onFail(MSG_ERROR_AUTH_CANCELED);
		}
		
		@Override
		public void onError() {
			onFail(MSG_ERROR_GETTING_TOKEN);
		}
	};

	@Override
	public void login(String... params) {
		// TODO Auto-generated method stub
		mOdnoklassniki.requestAuthorization(_baseContext, false, OkScope.VALUABLE_ACCESS);
	}

	@Override
	public void onSuccess(String token) {
		// TODO Auto-generated method stub
		_callBack.onSuccess(token);
		
	}

	@Override
	public void onFail(String msg) {
		// TODO Auto-generated method stub
		_callBack.onFail(msg);
	}

	@Override
	public void logout() {
		mOdnoklassniki.clearTokens(_baseContext);
	}

	@Override
	public void onResume() {
		if (!mOdnoklassniki.hasAccessToken()) {
			
		}
	}

	@Override
	public void onDestroy() {
		mOdnoklassniki.removeTokenRequestListener();
	}

	@Override
	public Boolean isLoggedIn() {
		return mOdnoklassniki.hasAccessToken();
	}

}
