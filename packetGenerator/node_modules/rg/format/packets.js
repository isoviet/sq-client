'use strict';

let fs = require('fs');

let Future = require('../future');
let helper = require('./helper');

function serialize(packets)
{
	return packets.map((packet) => `\t${packet}`).join(',\n');
}

function write(serverPackets, clientPackets, template, outputPath)
{
	template = template.replace('SERVER', serialize(serverPackets));
	template = template.replace('CLIENT', serialize(clientPackets));

	return fs.writeFileAsync(outputPath, template, {encoding : 'utf8'});
}

function generatePackets(serverPath, clientPath, templatePath, outputPath)
{
	let files =
	{
			server : helper.parseFile(serverPath),
			client : helper.parseFile(clientPath),
			template : fs.readFileAsync(templatePath, {encoding: 'utf8'})
	};

	Future.props(files)
		.then((files) => write(files.server, files.client, files.template, outputPath))
		.catch((error) =>{ console.error(error) });
}

module.exports =
{
	generatePackets : generatePackets
};